# version: '3.9'

# define a service which listens on port 8080 with the name chromadb
# ref: https://github.com/chroma-core/chroma/blob/main/docker-compose.yml

services:
  chromadb-server:
    image:  ghcr.io/chroma-core/chroma:0.5.5
    ports:
      - "8000:8000"
    healthcheck:
      # Adjust below to match your container port
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat" ]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      # Be aware that indexed data are located in "/chroma/chroma/"
      # Default configuration for persist_directory in chromadb/config.py
      # Read more about deployments: https://docs.trychroma.com/deployment
      - chroma-data:/chroma/chroma
    # environment:
    #   - IS_PERSISTENT=TRUE
    #   - CHROMA_SERVER_AUTHN_PROVIDER=${CHROMA_SERVER_AUTHN_PROVIDER}
    #   - CHROMA_SERVER_AUTHN_CREDENTIALS_FILE=${CHROMA_SERVER_AUTHN_CREDENTIALS_FILE}
    #   - CHROMA_SERVER_AUTHN_CREDENTIALS=${CHROMA_SERVER_AUTHN_CREDENTIALS}
    #   - CHROMA_AUTH_TOKEN_TRANSPORT_HEADER=${CHROMA_AUTH_TOKEN_TRANSPORT_HEADER}
    #   - PERSIST_DIRECTORY=${PERSIST_DIRECTORY:-/chroma/chroma}
    #   - CHROMA_OTEL_EXPORTER_ENDPOINT=${CHROMA_OTEL_EXPORTER_ENDPOINT}
    #   - CHROMA_OTEL_EXPORTER_HEADERS=${CHROMA_OTEL_EXPORTER_HEADERS}
    #   - CHROMA_OTEL_SERVICE_NAME=${CHROMA_OTEL_SERVICE_NAME}
    #   - CHROMA_OTEL_GRANULARITY=${CHROMA_OTEL_GRANULARITY}
    #   - CHROMA_SERVER_NOFILE=${CHROMA_SERVER_NOFILE}
    # restart: unless-stopped # possible values are: "no", always", "on-failure", "unless-stopped"


volumes:
  chroma-data:
    driver: local
